df_full_name_posts
Context=c("photos")
df_full_name_photos<-data.frame(Context,count_full_name_photos)
df_full_name_photos
Context=c("location")
df_full_name_location<-data.frame(Context,count_full_name_location)
df_full_name_location
df_fu<-factor(df_rel$Var1,levels=c("Very comfortable","Comfortable","Neither comfortable nor uncomfortable","Uncomfortable","Very uncomfortable"))
names(df_full_name_dating)<-c("Context","Likert","Frequency")
names(df_full_name_fitness)<-c("Context","Likert","Frequency")
names(df_full_name_posts)<-c("Context","Likert","Frequency")
names(df_full_name_photos)<-c("Context","Likert","Frequency")
names(df_full_name_location)<-c("Context","Likert","Frequency")
df_full_name_dating
df_full_name_fitness
df_full_name_dating$Likert<-factor(df_full_name_dating$Likert,levels=c("Very comfortable","Comfortable","Neither comfortable nor uncomfortable","Uncomfortable","Very uncomfortable"))
df_full_name_fitness$Likert<-factor(df_full_name_fitness$Likert,levels=c("Very comfortable","Comfortable","Neither comfortable nor uncomfortable","Uncomfortable","Very uncomfortable"))
df_full_name_posts$Likert<-factor(df_full_name_posts$Likert,levels=c("Very comfortable","Comfortable","Neither comfortable nor uncomfortable","Uncomfortable","Very uncomfortable"))
df_full_name_photos$Likert<-factor(df_full_name_photos$Likert,levels=c("Very comfortable","Comfortable","Neither comfortable nor uncomfortable","Uncomfortable","Very uncomfortable"))
df_full_name_location$Likert<-factor(df_full_name_locations$Likert,levels=c("Very comfortable","Comfortable","Neither comfortable nor uncomfortable","Uncomfortable","Very uncomfortable"))
df_full_name_location$Likert<-factor(df_full_name_location$Likert,levels=c("Very comfortable","Comfortable","Neither comfortable nor uncomfortable","Uncomfortable","Very uncomfortable"))
df_full_name_location
df_full_name<-rbind(df_full_name_dating,df_full_name_fitness,df_full_name_posts,df_full_name_photos,df_full_name_location)
df_full_name
data.matrix(df_full_name,rownames.force=NA)
t(data.matrix(df_full_name,rownames.force=NA)
)
df_full_name
t(df_full_name)
df_full_name
df$Context
df_full_name$Context
df_full_name
(d$current_setting)[2]
levels(d$current_setting)[2]<-'Industry and title'
levels(d$current_setting)[2]
d$current_setting
levels(d$current_setting)[2]<-'Anonymous profile characteristics such as industry and title'
d$current_setting
df_fullname
df_full_name
df_full_name_ dating
df_full_name_ dating
df_full_name_dating
data1<- data.frame(Likert)
data1<- data.frame(df_full_name_dating$Likert)
data1
count_full_name_dating
Context<-c("dating")
data1_full_name_dating<-data.frame(Context,count_full_name_dating)
data1_full_name_dating
t(data1_full_name_dating)
d$scen_1_dating_full_name
data.frame(d$scen_1_dating_full_name)
table(d$scen_1_dating_full_name)
Context<-c("fitness")
table(Context,countcount_full_name_dating
)
data1<-table(Context,count_full_name_dating)
data1
df_full_name_dating
names(df_full_name_dating)<-(df_full_name_dating[,2])
colnames(df_full_name_dating)<- unlist(df_full_name_dating[,2])
df_full_name_dating
df_full_name
m0<-matrix(5,5,0)
rownames<-c("Dating","Fitness","Posts","Photos","location")
colnames<-c("Very uncomfortable","Uncomfortable","Neither comfortable nor uncomfortable","Comfortable","Very comfortable")
m0<-df_full_name$Frequency
m0
m0<-matrix(NA,5,5)
rownames<-c("Dating","Fitness","Posts","Photos","location")
colnames<-c("Very uncomfortable","Uncomfortable","Neither comfortable nor uncomfortable","Comfortable","Very comfortable")
m0<-df_full_name$Frequency
m0
m0<-matrix(df_full_name$Frequency, nrow=5, ncol=5)
m0
t(m0)
dimnames(m0)<-list(c("Dating","Fitness","Posts","Photos","location"),c("Very uncomfortable","Uncomfortable","Neither comfortable nor uncomfortable","Comfortable","Very comfortable"))
m0
m0<-t(m0)
m0
m0<-matrix(df_full_name$Frequency, nrow=5, ncol=5)
m0<-t(m0)
m0
dimnames(m0)<-list(c("Dating","Fitness","Posts","Photos","location"),c("Very uncomfortable","Uncomfortable","Neither comfortable nor uncomfortable","Comfortable","Very comfortable"))
m0
m0[Dating][Very uncomfortable]
m0[1][1]
sum<-m0[1][1]+m0[1][2]+m0[1][3]+m0[1][4]+m0[1][5]
sum
mysri<-m0[1][1]+m0[1][2]+m0[1][3]+m0[1][4]+m0[1][5]
mysri
require(stats)
mysri<-sum(m0[1])
mysri
mysri<-sum(m0[1,])
mysri
mysri<-sum(m0[2,])
mysri
for( i in 1:1 ){
mysri[i]<-sum(m0[i,])}
mysri
mysri[1]
mysri[2]
for( i in 1:1 ){
for( i in 1:1 ){
+ mysri[i]<-sum(m0[i,])}
exit
jhj
}
for (i in 1:5){
mysri[i]<-sum(m0[i,])}
mysri
dimnames(mysri)=c("Count")
names(mysri)=c("Count")
mysri
names(mysri[1,])=c("Count")
t(mysri)
t(mysri)
m1<-matrix(mysri,nrow=1,ncol=5)
m1
m1<-t(m1)
m1
dimnames(m0)<-list(c("Dating","Fitness","Posts","Photos","location"),c("Count))
)
)))
)
exit
dimnames(m0)<-list(c("Dating","Fitness","Posts","Photos","location"),c("Very uncomfortable","Uncomfortable","Neither comfortable nor uncomfo
dimnames(m1)<-list(c("Dating","Fitness","Posts","Photos","location"),c("Count"))
m1
m2<-rbind(m1,m0)
m2
m2<-cbindX(m1,m0)
library(gdata)
install.paackages("gdata")
install.packages("gdata")
library(gdata)
m2<-cbindX(m1,m0)
m2
require(grid)
require(lattice)
require(latticeExtra)
require(HH)
data(m0)
dm0<-as.data.frame(m0)
dm0
data(dm0)
dm0
data(dm0)
likert(Question~.,main="Full name disclosure",ylab=NULL,sub="This plot looks better in a 9in x 4in window.")
data(dm0)
dm0
library("HH")
data("dm0",paackage="HH")
data(dm0,paackage="HH")
data("ProfChal", package = "HH")
tmp<- data.matrix(ProfChal[, 1:5])
tmp
ProfChal
set.seed(1234)
library(e1071)
probs <- cbind(c(.4,.2/3,.2/3,.2/3,.4),c(.1/4,.1/4,.9,.1/4,.1/4),c(.2,.2,.2,.2,.2))
my.n <- 100
my.len <- ncol(probs)*my.n
raw <- matrix(NA,nrow=my.len,ncol=2)
raw <- NULL
for(i in 1:ncol(probs)){
raw <- rbind(raw, cbind(i,rdiscrete(my.n,probs=probs[,i],values=1:5)))
}
r <- data.frame( cbind(
as.numeric( row.names( tapply(raw[,2], raw[,1], mean) ) ),
tapply(raw[,2], raw[,1], mean),
tapply(raw[,2], raw[,1], mean) + sqrt( tapply(raw[,2], raw[,1], var)/tapply(raw[,2], raw[,1], length) ) * qnorm(1-.05/2,0,1),
tapply(raw[,2], raw[,1], mean) - sqrt( tapply(raw[,2], raw[,1], var)/tapply(raw[,2], raw[,1], length) ) * qnorm(1-.05/2,0,1)
))
names(r) <- c("group","mean","ll","ul")
gbar <- tapply(raw[,2], list(raw[,2], raw[,1]), length)
sgbar <- data.frame( cbind(c(1:max(unique(raw[,1]))),t(gbar)) )
sgbar.likert<- sgbar[,2:6]
require(grid)
require(lattice)
require(latticeExtra)
require(HH)
sgbar.likert<- sgbar[,2:6]
likert(sgbar.likert,
main='Example Diverging Stacked Bar Chart for Likert Scale',
sub="Likert Scale")
likert(sgbar.likert, horizontal=FALSE,
aspect=1.5,
main="Example Diverging Stacked Bar Chart for Likert Scale",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2),
sub="Likert Scale")
likert(sgbar.likert,
auto.key=list(between=1, between.columns=2),
xlab="Percentage",
main="Example Diverging Stacked Bar Chart for Likert Scale",
BrewerPaletteName="Blues",
sub="Likert Scale")
sgbar.likert
sgbar
sgbar.likert
m0
dm0
dm0[,1]
require(grid)
require(lattice)
require(latticeExtra)
require(HH)
likert(dm0,
main='Full Name discosure aaccross scenarios',
sub="Likert Scale")
likert(dm0, horizontal=TRUE,
aspect=1.5,
main="Full Name Disclosure accross scenaarios",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2),
sub="Likert Scale")
likert(dm0,
auto.key=list(between=1, between.columns=2),
xlab="No. of Participants",
main="Full name disclosure accross scenarios",
BrewerPaletteName="Blues",
sub="Likert Scale")
dm0
dm0
likert(sgbar.likert,
auto.key=list(between=1, between.columns=2),
xlab="Percentage",
main="Example Diverging Stacked Bar Chart for Likert Scale",
BrewerPaletteName="Blues",
main="Example Diverging Stacked Bar Chart for Likert Scale",
likert(sgbar.likert,
auto.key=list(between=1, between.columns=2),
xlab="Percentage",
main="Example Diverging Stacked Bar Chart for Likert Scale",
BrewerPaletteName="Blues",
sub="Likert Scale")
exit
likert(dm0,
auto.key=list(between=1, between.columns=2),
xlab="No. of Participants",
main="Full name disclosure accross scenarios",
BrewerPaletteName="Blues",
sub="Likert Scale")
likert(dm0,
auto.key=list(between=1, between.columns=2),
xlab="No. of Participants",
main="Full name disclosure accross scenarios",
BrewerPaletteName="Blues",
sub="Likert Scale")
likert(dm0, horizontal=TRUE,
aspect=1.5,
main="Full Name Disclosure accross scenaarios",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2),
sub="Likert Scale")
likert(dm0,
main='Full Name discosure aaccross scenarios',
sub="Likert Scale")
likert(dm0, horizontal=TRUE,
aspect=1.5,
main="Full Name Disclosure accross scenaarios",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2),
sub="Likert Scale")
likert(dm0, horizontal=TRUE,
aspect=1.5,
main="Full Name Disclosure accross scenaarios",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2),
exit
exit
likert(dm0, horizontal=TRUE,
aspect=1.5,
main="Full Name Disclosure accross scenarios",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2),
sub="Likert Scale")
likert(dm0, horizontal=TRUE,
aspect=1.5,
main="Full Name Disclosure accross scenarios",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2))
dm0
dm0
for (i in 1:5){
for (j in 1:5){
dm0[i][j]=(dm0[i][j]*100)/sum(dm0[i,])}}
dm0[1][1]
dm0
dm0<-as.data.frame(m0)
dm0
dm0[1][2]
m_dating=m0
m_dating
for (i in 1:5){
for (j in 1:5){
m0[i][j]=(m0[i][j]*100)/sum(m0[i,])}}
m0
m0=m_dating
m_dating
dm0
prop.table(m0)
m0=m_dating
m0
percent.table(m0)
dm0
m0
m0
m0
dm0
dm0
m1
m0
m1<-matrix(mysri,nrow=1,ncol=5)
m1<-t(m1)
dimnames(m1)<-list(c("Dating","Fitness","Posts","Photos","location"),c("Count"))
m2<-cbindX(m1,m0)
m2
m2<-cbindX(m0,m1)
m2
sapply(m2[1:5],FUN=function(m2[1:5] m2/m2[6])
sapply(m2(1:5),FUN=function(m2(1:5) m2/m2[6])
sapply(m2,FUN=function(m2 m2/m2[6])
sapply(m2[1:5],FUN=function(m2[1:5] m2/m2[6])
sapply(m2[1:5],FUN=function(m2[1:5] m2/m2[6]))
sapply(m2[1:5],FUN=function(m2[1:5] m2/m2[6]))
sapply(m2[1,5],FUN=function(m2[1,5] m2/m2[,6]))
m2
sapply(m2,FUN=function(m2) m2/m2[,6])
m2
m2[,6]
sapply(m2,FUN=function(m2) m2/m2[,6])
sapply(m2,FUN=function(m2) m2/m2[6, ])
sapply(m2,FUN=function(m2) m2/m2[,5])
sapply(m2,FUN=function(x) x/x[,6])
sapply(m2,FUN=function(x) x/x$Count)
mapply(m2,FUN=function(m2) m2/m2[,6])
dm0
m2
dm1<-as.data.frame(m2)
dm1
for (i in 1:5){
dm1[i,]=dm1[i,]/dm1[i,6]}
dm1
dm1<-as.data.frame(m2)
for (i in 1:5){
dm1[i,1]=(dm1[i,]/dm1[i,6])
}
dm1
dm1<-as.data.frame(m2)
dm1
for (i in 1:5){
dm1[i,]=(dm1[i,]/dm1[i,6])*100}
dm1
dm1
dm_full_name<-dm1[,5]
dm_full_name
dm_full_name<-dm1[1:5]
dm_full_name
likert(dm_full_name, horizontal=TRUE,
aspect=1,
main="Full Name Disclosure across scenarios",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2))
likert(dm_full_name, horizontal=TRUE,
aspect=1,
main="Full Name Disclosure across scenarios",xlab="Percentage of respondents",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2))
likert(dm_full_name, horizontal=TRUE,
aspect=0.5,
main="Full Name Disclosure across scenarios",xlab="Percentage of respondents",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2))
likert(dm_full_name, horizontal=TRUE,
aspect=0.5,
main="Full Name Disclosure across scenarios",xlab="Percentage of respondents",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2,BrewerPaletteName="Blues",))
likert(dm_full_name, horizontal=TRUE,
aspect=0.5,
main="Full Name Disclosure across scenarios",xlab="Percentage of respondents",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2,BrewerPaletteName="Blues"))
sri<-likert(dm_full_name, horizontal=TRUE,
aspect=0.5,
main="Full Name Disclosure across scenarios",xlab="Percentage of respondents",
auto.key=list(space="right", columns=1,
reverse=TRUE, padding.text=2,BrewerPaletteName="Blues"))
sri
likert.bar.plot(likert, low.color = "#D8B365", high.color = "#5AB4AC",
neutral.color = "grey90", neutral.color.ramp = "white",
plot.percent.low = TRUE, plot.percent.high = TRUE,
plot.percent.neutral = TRUE, plot.percents = FALSE, text.size = 3,
text.color = "black", centered = TRUE, center = (likert$nlevels - 1)/2 +
1, include.center = TRUE, ordered = TRUE,
wrap = ifelse(is.null(likert$grouping), 50, 100), wrap.grouping = 50,
legend = "Response", legend.position = "bottom", panel.arrange = "v",
wrap = ifelse(is.null(likert$grouping), 50, 100), wrap.grouping = 50,
)
likert.bar.plot(sri, low.color = "#D8B365", high.color = "#5AB4AC",
neutral.color = "grey90", neutral.color.ramp = "white",
plot.percent.low = TRUE, plot.percent.high = TRUE,
plot.percent.neutral = TRUE, plot.percents = FALSE, text.size = 3,
text.color = "black", centered = TRUE, center = (likert$nlevels - 1)/2 +
1, include.center = TRUE, ordered = TRUE,
wrap = ifelse(is.null(likert$grouping), 50, 100), wrap.grouping = 50,
legend = "Response", legend.position = "bottom", panel.arrange = "v",
panel.strip.color = "#F0F0F0")
d
names(d)
df_full_name_dating
dm_full_name
dm_full_name
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
m0
for (i in 1:5){
mysri[i]<-sum(m0[i,])}
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
df_full_name
m0_full_name
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
for (i in 1:5){inter[i]<-sum(m0_full_name[i,])}
for (i in 1:5){inter[i]<-sum(m0_full_name[i,])}
for (i in 1:5){
mysri[i]<-sum(m0_full_name[i,])}
mysri
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
for (i in 1:5){
inter[i]<-sum(m0_full_name[i,})}
inter
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
dm1_full_name
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
dm1_full_name
dm1_full_name
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
dm1_full_name
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
for (i in 1:5){
dm1_full_name[i,]<-(dm1_full_name[i,]/dm1_full_name[i,6])*100
}
class(dm1_full_name)
dm1_full_name
Class(dm1_fulll_name[,6])
class(dm1_fulll_name[,6])
class(dm1_full_name[,6])
class(dm1_full_name[,5])
source("D:/Svn-Checkout/src/querier_privacy/Full_name.R")
m1_full_name
q()
load("D:/Svn-Checkout/src/querier_privacy/cleaned_querier_data.RData")
load("D:/Svn-Checkout/src/querier_privacy/cleaned_publisher_data.RData")
names(d)
names(pdata)
names(d)
d$can_alice_see_who_visited_her_page
summary(d$can_alice_see_who_visited_her_page)
names(pdata)
summary(pdata$Alice_setting_linkedin)
summary(pdata$Alice_setting_linkedIn)
names(d)
summary(d$fb_can_alice_see_if_someone_has_read_a_message)
summary(pdata$Alice_setting_facebook)
summary(pdata$Alice_setting_Facebook)
clear
clear()
setwd("D:/Grad Studies")
setwd("D:/Grad Studies/Machine Learning/Assignment2/Code")
data<-read.csv("blogData_train_norm.csv",header=FALSE)
data1<-data[,51;277]
data1<-data[,51:277]
data2<-data[,278:280]
dataf<-cbind(data1,data2)
names(dataf)
data2<-data[,279:280]
dataf<-cbind(data1,data2)
names(dataf)
library(mlbench)
library(caret)
cmat <- cor(dataf)
highlyCorrelated <- findCorrelation(cmat, cutoff=0.75)
hcor<-findCorrelation(cmat, cutoff=0.75)
hcor
names(dataf)
dataf[,1]
dataf$V51
hcor
names(dataf)
count(names(dataf))
nrw(dataf)
nrow(dataf)
y=duplicated(dataf)
y
dataf[duplicated(dataf), ]
datax<-dataf[duplicated(dataf), ]
nrow(datax)
setwd("D:/Grad Studies/Machine Learning/Assignment2/Code")
data<-read.csv("blogData_train_norm.csv",header=FALSE)
names(data)
summary(data$V281)
